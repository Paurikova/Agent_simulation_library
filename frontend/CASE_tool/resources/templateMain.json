{
  "InitMessageDef": "\npublic:\n    void initMessage() override;",
  "InitMessageImpl": "\nvoid {}{}{}::initMessage() {{\n    // Add implementation of initial message\n    // Replace:\n    //      pServiceId by required service ID\n    //      pExecTime by execution time of event\n    //      pReceiver by the ID of the receiving agent\n    sendMessage(pServiceId, pExecTime, 1, pReceiver, 1);\n}}",
  "Attribute" : "\n    {} {} = {};",
  "MainInclude": "\n#include/{}.h",
  "MainReasoningDef": "\n    std::unique_ptr<{}> r{} = td::make_unique<{}>(logger.get());",
  "MainManagerDef": "\n    std::unique_ptr<AgentManager> aManager = std::make_unique<AgentManager>(r{}.get(), logger.get());",
  "MainAgentDef": "\n    std::unique_ptr<Agent> a{} = std::make_unique<Agent>({}, aManager.get(), r{}.get());",
  "MainRegisterAgent": "\n    aManager->registerAgent(a{}.get());"
}